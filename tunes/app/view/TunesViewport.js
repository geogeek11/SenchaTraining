/*
 * File: app/view/TunesViewport.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tunes.view.TunesViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.tunesviewport',

    requires: [
        'Tunes.view.TunesViewportViewModel',
        'Tunes.view.TunesViewportViewController',
        'Ext.panel.Panel',
        'Ext.view.View',
        'Ext.XTemplate'
    ],

    controller: 'tunesviewport',
    viewModel: {
        type: 'tunesviewport'
    },
    layout: 'fit',

    items: [
        {
            xtype: 'panel',
            layout: 'fit',
            title: 'iTunes Music Videos',
            items: [
                {
                    xtype: 'dataview',
                    autoScroll: true,
                    itemCls: 'x-dataview-item video',
                    itemSelector: 'div',
                    itemTpl: [
                        ' <figure>',
                        '     <img src="{image}" />',
                        '     <figcaption><b>{title}</b><br/>{artist}</figcaption><br/>',
                        ' </figure>'
                    ],
                    overItemCls: 'overvideo',
                    selectedItemCls: 'x-item-selected selectedvideo',
                    bind: {
                        store: '{tunes}'
                    },
                    listeners: {
                        itemdblclick: 'onDataviewItemDblClick'
                    }
                }
            ]
        }
    ]

});